# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-10 08:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(blank=True, null=True)),
                ('original_title', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('poster_path', models.CharField(blank=True, max_length=300, null=True)),
                ('backdrop_path', models.CharField(blank=True, max_length=300, null=True)),
                ('adult', models.BooleanField()),
                ('budget', models.IntegerField(blank=True, null=True)),
                ('homepage', models.CharField(blank=True, max_length=100, null=True)),
                ('original_language', models.CharField(blank=True, max_length=3, null=True)),
                ('overview', models.CharField(blank=True, max_length=500, null=True)),
                ('popularity', models.FloatField(blank=True, null=True)),
                ('release_date', models.CharField(blank=True, max_length=20, null=True)),
                ('revenue', models.BigIntegerField(blank=True, null=True)),
                ('runtime', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('tagline', models.CharField(blank=True, max_length=60, null=True)),
                ('video', models.BooleanField()),
                ('tmdb_average_rating', models.FloatField(blank=True, null=True)),
                ('tmdb_vote_count', models.IntegerField(blank=True, null=True)),
                ('average_rating', models.FloatField()),
                ('votes_count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MoviesCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('poster_path', models.CharField(blank=True, max_length=300, null=True)),
                ('backdrop_path', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_3166_1', models.CharField(blank=True, max_length=3, null=True)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='RecommendedMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_index', models.FloatField()),
                ('movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recommended_movies_info', to='movies.Movie')),
                ('recommended_movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommended_movie', to='movies.Movie')),
            ],
            options={
                'ordering': ('movie', 'recommendation_index'),
            },
        ),
        migrations.CreateModel(
            name='SimilarMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_index', models.FloatField()),
                ('movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='similar_movies_info', to='movies.Movie')),
                ('similar_movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similar_movie', to='movies.Movie')),
            ],
            options={
                'ordering': ('movie', 'similarity_index'),
            },
        ),
        migrations.CreateModel(
            name='SpokenLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_639_1', models.CharField(blank=True, max_length=3, null=True)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='VotedKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votes', models.IntegerField(blank=True, default=0)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword', to='movies.Keyword')),
                ('movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='keywords_info', to='movies.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='VotedMovieGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votes', models.IntegerField(blank=True, default=0)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genre', to='movies.MovieGenre')),
                ('movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='genres_info', to='movies.Movie')),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='belongs_to_collection',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collection', to='movies.MoviesCollection'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genres_related',
            field=models.ManyToManyField(to='movies.MovieGenre'),
        ),
        migrations.AddField(
            model_name='movie',
            name='keywords',
            field=models.ManyToManyField(to='movies.Keyword'),
        ),
        migrations.AddField(
            model_name='movie',
            name='production_companies',
            field=models.ManyToManyField(to='movies.ProductionCompany'),
        ),
        migrations.AddField(
            model_name='movie',
            name='production_countries',
            field=models.ManyToManyField(to='movies.ProductionCountry'),
        ),
        migrations.AddField(
            model_name='movie',
            name='spoken_languages',
            field=models.ManyToManyField(to='movies.SpokenLanguage'),
        ),
    ]
